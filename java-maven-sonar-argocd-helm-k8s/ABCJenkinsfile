pipeline {
  agent any
  tools {
      maven 'maven3'
  }
  stages {
    stage('Checkout') {
      steps {
        echo 'cloing the clode from git repo'
        git branch: 'main', url: 'https://github.com/Ashok-Cherukuri/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://18.188.149.96:9090"
      }
      steps {
        withCredentials([string(credentialsId: 'sonartoken', variable: 'sonartoken')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$sonartoken -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
   stage('Build Docker Image') {
       steps {
           echo 'building docker image from war file'
           sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t abc2kch/ultimate-cicd:${BUILD_NUMBER} .'
       }
   }
   stage('Push docker Image') {
       steps {
           script {
               withCredentials([string(credentialsId: 'dhubtoken', variable: 'dhubtoken')]) {
               sh 'docker login -u abc2kch -p ${dhubtoken}'
                  }
                  sh 'docker push abc2kch/ultimate-cicd:${BUILD_NUMBER}' 
                  echo 'Pushed to Docker Hub'
               }
           }
        }
    stage('Update deploymentfile') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "Ashok-Cherukuri"
        }
        steps {
            withCredentials([string(credentialsId: 'ghubtoken', variable: 'ghubtoken')]) {
                sh '''
                    git config user.email "abc2kch@gmail.com"
                    git config user.name "Ashok-Cherukuri"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/ultimate-cicd:.*/ultimate-cicd:${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${ghubtoken}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
